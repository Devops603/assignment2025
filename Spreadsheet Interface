<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Spreadsheet Interface</title>
    <style>
        body {
            font-family: Arial, sans-serif;
        }
        .toolbar {
            display: flex;
            padding: 10px;
            background-color: #f1f1f1;
            border-bottom: 1px solid #ccc;
        }
        .toolbar button {
            margin-right: 10px;
        }
        .formula-bar {
            padding: 10px;
            background-color: #fff;
            border-bottom: 1px solid #ccc;
        }
        .spreadsheet {
            display: grid;
            grid-template-columns: repeat(10, 100px);
            grid-template-rows: repeat(20, 30px);
            border: 1px solid #ccc;
        }
        .spreadsheet .cell {
            border: 1px solid #ccc;
            padding: 5px;
            box-sizing: border-box;
            cursor: pointer;
            user-select: none;
        }
        .spreadsheet .cell.selected {
            background-color: #e0e0e0;
        }
    </style>
</head>
<body>
    <div class="toolbar">
        <button onclick="bold()">Bold</button>
        <button onclick="italic()">Italic</button>
        <button onclick="increaseFontSize()">Increase Font Size</button>
        <button onclick="decreaseFontSize()">Decrease Font Size</button>
    </div>
    <div class="formula-bar">
        <input type="text" id="formula" placeholder="Enter formula here" onkeyup="applyFormula()">
    </div>
    <div class="spreadsheet" id="spreadsheet">
        <!-- Cells will be generated by JavaScript -->
    </div>
    <script>
        const spreadsheet = document.getElementById('spreadsheet');
        let selectedCell = null;

        // Generate cells
        for (let i = 0; i < 200; i++) {
            const cell = document.createElement('div');
            cell.className = 'cell';
            cell.contentEditable = true;
            cell.onfocus = () => selectCell(cell);
            spreadsheet.appendChild(cell);
        }

        function selectCell(cell) {
            if (selectedCell) {
                selectedCell.classList.remove('selected');
            }
            selectedCell = cell;
            selectedCell.classList.add('selected');
            document.getElementById('formula').value = selectedCell.dataset.formula || '';
        }

        function applyFormula() {
            if (selectedCell) {
                const formula = document.getElementById('formula').value;
                selectedCell.dataset.formula = formula;
                // Simple formula parsing (e.g., "=A1+B1")
                if (formula.startsWith('=')) {
                    try {
                        const result = eval(formula.substring(1).replace(/([A-Z][0-9]+)/g, match => {
                            const cell = getCellByReference(match);
                            return cell ? cell.innerText : '0';
                        }));
                        selectedCell.innerText = result;
                    } catch (e) {
                        selectedCell.innerText = 'ERROR';
                    }
                } else {
                    selectedCell.innerText = formula;
                }
            }
        }

        function getCellByReference(ref) {
            const col = ref.charCodeAt(0) - 65;
            const row = parseInt(ref.substring(1)) - 1;
            return spreadsheet.children[row * 10 + col];
        }

        function bold() {
            if (selectedCell) {
                document.execCommand('bold');
            }
        }

        function italic() {
            if (selectedCell) {
                document.execCommand('italic');
            }
        }

        function increaseFontSize() {
            if (selectedCell) {
                const currentSize = window.getComputedStyle(selectedCell, null).getPropertyValue('font-size');
                const newSize = parseInt(currentSize) + 2 + 'px';
                selectedCell.style.fontSize = newSize;
            }
        }

        function decreaseFontSize() {
            if (selectedCell) {
                const currentSize = window.getComputedStyle(selectedCell, null).getPropertyValue('font-size');
                const newSize = parseInt(currentSize) - 2 + 'px';
                selectedCell.style.fontSize = newSize;
            }
        }
    </script>
</body>
</html>
